import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import classification_report, confusion_matrix
from xgboost import XGBClassifier

# Load dataset
df = pd.read_csv("online_fraud_dataset.csv")  # Replace with your dataset file

# Encode categorical columns
le_type = LabelEncoder()
df['type'] = le_type.fit_transform(df['type'])

le_nameOrig = LabelEncoder()
df['nameOrig'] = le_nameOrig.fit_transform(df['nameOrig'])

le_nameDest = LabelEncoder()
df['nameDest'] = le_nameDest.fit_transform(df['nameDest'])

# Feature selection
features = ['step', 'type', 'amount', 'oldbalanceOrg', 'newbalanceOrg',
            'oldbalanceDest', 'newbalanceDest']
X = df[features]
y = df['isFraud']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
model = XGBClassifier(use_label_encoder=False, eval_metric='logloss')
model.fit(X_train, y_train)

# Predictions
y_pred = model.predict(X_test)

# Evaluation
print("Classification Report:")
print(classification_report(y_test, y_pred))
print("Confusion Matrix:")
print(confusion_matrix(y_test, y_pred))
